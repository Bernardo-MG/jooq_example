<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <!-- ********************************************** -->
   <!-- ****************** BASE POM ****************** -->
   <!-- ********************************************** -->

   <parent>
      <groupId>com.bernardomg.example</groupId>
      <artifactId>jooq-example</artifactId>
      <version>1.0.0-SNAPSHOT</version>
   </parent>

   <!-- ********************************************** -->
   <!-- **************** PROJECT INFO **************** -->
   <!-- ********************************************** -->

   <artifactId>tests</artifactId>
   <packaging>jar</packaging>

   <name>jOOQ Example - Tests</name>
   <description>jOOQ example tests</description>

   <!-- ********************************************** -->
   <!-- ****************** PROFILES ****************** -->
   <!-- ********************************************** -->

   <profiles>
      <!-- ============================================== -->
      <!-- ============= DATABASE PROFILES ============== -->
      <!-- ============================================== -->
      <profile>
         <!-- H2 database profile -->
         <!-- Prepares the project to make use of an H2 in-memory database -->
         <id>h2</id>
         <properties>
            <!-- Access data -->
            <database.url>jdbc:h2:mem:jpa_test</database.url>
            <database.username>sa</database.username>
            <database.password></database.password>
            <!-- Spring context -->
            <spring.profile.database>h2</spring.profile.database>
         </properties>
         <dependencies>
            <dependency>
               <!-- H2 database -->
               <groupId>com.h2database</groupId>
               <artifactId>h2</artifactId>
               <version>${h2.version}</version>
            </dependency>
         </dependencies>
      </profile>
      <profile>
         <!-- HSQLDB database profile -->
         <!-- Prepares the project to make use of an HSQLDB in-memory database -->
         <id>hsqldb</id>
         <properties>
            <!-- Access data -->
            <database.url>jdbc:hsqldb:mem:jpa_test</database.url>
            <database.username>sa</database.username>
            <database.password></database.password>
            <!-- Spring context -->
            <spring.profile.database>hsqldb</spring.profile.database>
         </properties>
         <dependencies>
            <dependency>
               <!-- HSQLDB driver -->
               <groupId>org.hsqldb</groupId>
               <artifactId>hsqldb</artifactId>
               <version>${hsqldb.version}</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
      <profile>
         <!-- MySQL database profile -->
         <!-- Prepares the project to make use of an H2 in-memory database -->
         <id>mysql</id>
         <properties>
            <!-- Access data -->
            <database.url>jdbc:mysql://localhost:3306/jpa_test</database.url>
            <database.username>root</database.username>
            <database.password>root</database.password>
            <!-- Spring context -->
            <spring.profile.database>mysql</spring.profile.database>
         </properties>
         <dependencies>
            <dependency>
               <!-- MySQL connector -->
               <groupId>mysql</groupId>
               <artifactId>mysql-connector-java</artifactId>
               <version>${mysql.version}</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
      <profile>
         <!-- Postgres database profile -->
         <!-- Prepares the project to make use of a Postgres database -->
         <id>postgres</id>
         <properties>
            <!-- Access data -->
            <database.url>jdbc:postgresql://localhost:5432/jpa_test</database.url>
            <database.username>postgres</database.username>
            <database.password>postgres</database.password>
            <!-- Spring context -->
            <spring.profile.database>postgres</spring.profile.database>
         </properties>
         <dependencies>
            <dependency>
               <!-- Postgres connector -->
               <groupId>org.postgresql</groupId>
               <artifactId>postgresql</artifactId>
               <version>${postgresql.version}</version>
               <scope>test</scope>
            </dependency>
            <!-- ============================================== -->
            <!-- ============ VERSION ENFORCEMENT ============= -->
            <!-- ============================================== -->
            <dependency>
               <!-- Checker -->
               <groupId>org.checkerframework</groupId>
               <artifactId>checker-qual</artifactId>
               <version>${checker.version}</version>
            </dependency>
         </dependencies>
      </profile>
      <!-- ============================================== -->
      <!-- ============ JPA PROVIDER PROFILES =========== -->
      <!-- ============================================== -->
      <profile>
         <!-- Hibernate JPA provider profile -->
         <!-- Prepares the project to connect to the DB through Hibernate -->
         <id>hibernate</id>
         <properties>
            <jpa.provider>hibernate</jpa.provider>
         </properties>
         <dependencies>
            <dependency>
               <!-- jOOQ Hibernate -->
               <groupId>org.jooq</groupId>
               <artifactId>jooq-meta-extensions-hibernate</artifactId>
               <version>${jooq.version}</version>
            </dependency>
            <dependency>
               <!-- Hibernate Core -->
               <groupId>org.hibernate</groupId>
               <artifactId>hibernate-core</artifactId>
               <version>${hibernate.version}</version>
            </dependency>
            <dependency>
               <!-- Hibernate Ehcache -->
               <groupId>org.hibernate</groupId>
               <artifactId>hibernate-ehcache</artifactId>
               <version>${hibernate.version}</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

   <!-- ********************************************** -->
   <!-- *********** ORGANIZATION AND MEMBERS ********* -->
   <!-- ********************************************** -->

   <organization>
      <name>Bernardo Martínez Garrido</name>
      <url>https://github.com/Bernardo-MG</url>
   </organization>

   <developers>
      <developer>
         <id>bmg</id>
         <name>Bernardo Martínez Garrido</name>
         <email>programming@bernardomg.com</email>
         <url>https://github.com/Bernardo-MG</url>
         <organization>Bernardo Martínez Garrido</organization>
         <organizationUrl>https://github.com/Bernardo-MG</organizationUrl>
         <roles>
            <role>Developer</role>
         </roles>
         <timezone>+1</timezone>
         <properties />
      </developer>
   </developers>

   <!-- ********************************************** -->
   <!-- **************** PROPERTIES ****************** -->
   <!-- ********************************************** -->

   <properties>
      <!-- ============================================== -->
      <!-- =============== MANIFEST DATA ================ -->
      <!-- ============================================== -->
      <manifest.name>com/bernardomg/example/jooq/tests</manifest.name>
      <!-- ============================================== -->
      <!-- =========== DEPENDENCIES VERSIONS ============ -->
      <!-- ============================================== -->
      <checker.version>3.12.0</checker.version>
      <h2.version>1.4.200</h2.version>
      <hibernate.version>5.5.7.Final</hibernate.version>
      <hikari.version>3.4.5</hikari.version>
      <hsqldb.version>2.6.0</hsqldb.version>
      <javaee.api.version>2.2</javaee.api.version>
      <javax.annotation.version>1.3.2</javax.annotation.version>
      <jooq.version>3.15.3</jooq.version>
      <junit.jupiter.version>5.8.0</junit.jupiter.version>
      <junit.platform.version>1.8.0</junit.platform.version>
      <liquibase.version>4.4.3</liquibase.version>
      <log4j.version>2.14.1</log4j.version>
      <mysql.version>8.0.21</mysql.version>
      <postgresql.version>42.2.23</postgresql.version>
      <slf4j.version>2.0.0-alpha5</slf4j.version>
      <snakeyaml.version>1.29</snakeyaml.version>
      <spring.version>5.3.10</spring.version>
   </properties>

   <!-- ********************************************** -->
   <!-- *************** DEPENDENCIES ***************** -->
   <!-- ********************************************** -->

   <dependencyManagement>
      <dependencies>
         <dependency>
            <!-- Spring Framework BOM -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-framework-bom</artifactId>
            <version>${spring.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <!-- ============================================== -->
      <!-- ================== PROJECT =================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Generator -->
         <groupId>com.bernardomg.example</groupId>
         <artifactId>generator</artifactId>
         <version>${project.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ==================== JPA ===================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- JPA API -->
         <groupId>javax.persistence</groupId>
         <artifactId>javax.persistence-api</artifactId>
         <version>${javaee.api.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ==================== JAVAX =================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- JavaX Annotation -->
         <groupId>javax.annotation</groupId>
         <artifactId>javax.annotation-api</artifactId>
         <version>${javax.annotation.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ==================== JOOQ ==================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- jOOQ -->
         <groupId>org.jooq</groupId>
         <artifactId>jooq</artifactId>
         <version>${jooq.version}</version>
         <exclusions>
            <exclusion>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <!-- jOOQ Meta -->
         <groupId>org.jooq</groupId>
         <artifactId>jooq-meta</artifactId>
         <version>${jooq.version}</version>
      </dependency>
      <dependency>
         <!-- jOOQ Codegen -->
         <groupId>org.jooq</groupId>
         <artifactId>jooq-codegen</artifactId>
         <version>${jooq.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ================== LOGGERS =================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- SLF4J API -->
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${slf4j.version}</version>
      </dependency>
      <dependency>
         <!-- Log4j SLF4J Bridge -->
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-slf4j18-impl</artifactId>
         <version>${log4j.version}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <!-- Log4j core -->
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-core</artifactId>
         <version>${log4j.version}</version>
         <scope>provided</scope>
      </dependency>
      <!-- ============================================== -->
      <!-- ======= TEST ENVIRONMENT DEPENDENCIES ======== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Hikari CP -->
         <groupId>com.zaxxer</groupId>
         <artifactId>HikariCP</artifactId>
         <version>${hikari.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Liquibase -->
         <groupId>org.liquibase</groupId>
         <artifactId>liquibase-core</artifactId>
         <version>${liquibase.version}</version>
         <exclusions>
            <exclusion>
               <groupId>ch.qos.logback</groupId>
               <artifactId>logback-classic</artifactId>
            </exclusion>
         </exclusions>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- SnakeYAML -->
         <groupId>org.yaml</groupId>
         <artifactId>snakeyaml</artifactId>
         <version>${snakeyaml.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- JUnit Jupiter Engine -->
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-engine</artifactId>
         <version>${junit.jupiter.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- JUnit Jupiter Platform -->
         <groupId>org.junit.platform</groupId>
         <artifactId>junit-platform-runner</artifactId>
         <version>${junit.platform.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring AOP -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-aop</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Beans -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-beans</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Framework Context -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring ORM -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-orm</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Test -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Transactions -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-tx</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <!-- ********************************************** -->
   <!-- ******************* BUILD ******************** -->
   <!-- ********************************************** -->

   <build>
      <defaultGoal>clean package</defaultGoal>
      <resources>
         <resource>
            <directory>src/main/resources/</directory>
            <includes>
               <!-- Configuration -->
               <include>*.xml</include>
            </includes>
            <filtering>true</filtering>
         </resource>
      </resources>
      <testResources>
         <testResource>
            <directory>src/test/resources/</directory>
         </testResource>
         <testResource>
            <!-- Test resources -->
            <directory>src/test/resources/</directory>
            <includes>
               <!-- Filter the contexts -->
               <include>context/**/*.xml</include>
               <!-- Filter the properties -->
               <include>config/**/*.properties</include>
            </includes>
            <filtering>true</filtering>
         </testResource>
      </testResources>
      <plugins>
         <plugin>
            <!-- Resources -->
            <!-- Handles the project resources. -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
               <!-- Variables to to override will be delimited with a @. -->
               <!-- This avoids collisions with Spring variables. -->
               <!-- So instead of replacing ${project.name} Maven will replace @project.name@. -->
               <useDefaultDelimiters>false</useDefaultDelimiters>
               <delimiters>
                  <delimiter>@</delimiter>
               </delimiters>
            </configuration>
         </plugin>
      </plugins>
   </build>

</project>
